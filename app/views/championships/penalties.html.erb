<%= form_with url: apply_penalties_championship_path(@championship), method: :patch, data: { turbo: false } do |f| %>
  <%= hidden_field_tag :track_name, @championship.track_name %>
  <%= hidden_field_tag :session_date, @championship.session_date %>
  <%= hidden_field_tag :session_time, @championship.session_time %>

  <table>
    <thead>
      <tr>
        <th>Piloto</th>
        <th>Número do Carro</th>
        <th>Adversário</th>
        <th>Motivo da Penalidade</th>
        <th>Valor (segundos)</th>
        <th>Volta da Violação</th>
        <th>Volta da Limpeza</th>
        <th>Pontos de Penalidade</th>
        <th>Ações</th>
      </tr>
    </thead>
    <tbody>
      <% @drivers.each do |driver| %>
        <% substitute_options = @drivers.reject { |d| d.id == driver.id }.sort_by { |d| d.driver_first_name }.map { |d| ["#{d.driver_first_name} #{d.driver_last_name}", d.id] } %>

        <% penalty_points = driver.penalty_points.present? ? driver.penalty_points.split(',').reject { |p| p == "0" } : [] %>

        <% if penalty_points.empty? %>
          <tr class="penalty-fields" id="penalty-fields-<%= driver.id %>">
            <td><%= driver.driver_first_name %> <%= driver.driver_last_name %></td>
            <td><%= driver.race_number %></td>
            <td>
              <%= f.select "penalties[#{driver.id}][0][driver_id]", options_for_select(substitute_options), class: 'pilot-dropdown' %>
            </td>
            <td><%= f.text_field "penalties[#{driver.id}][0][penalty_reason]", value: "" %></td>
            <td><%= f.number_field "penalties[#{driver.id}][0][penalty_value]", value: "" %></td>
            <td><%= f.number_field "penalties[#{driver.id}][0][penalty_violation_in_lap]", value: "" %></td>
            <td><%= f.number_field "penalties[#{driver.id}][0][penalty_cleared_in_lap]", value: "" %></td>
            <td><%= f.number_field "penalties[#{driver.id}][0][penalty_points]", value: "", class: 'form-control' %></td>
            <td>
              <button type="button" class="add-penalty-btn btn btn-success" data-driver-id="<%= driver.id %>">+</button>
              <button type="button" class="remove-penalty-btn btn btn-danger" data-driver-id="<%= driver.id %>">-</button>
            </td>
          </tr>
        <% else %>
          <% penalty_points.each_with_index do |penalty_point, i| %>
            <tr class="penalty-fields" id="penalty-fields-<%= driver.id %>">
              <td><%= driver.driver_first_name %> <%= driver.driver_last_name %></td>
              <td><%= driver.race_number %></td>
              <td><%= f.select "penalties[#{driver.id}][#{i}][driver_id]", options_for_select(substitute_options), class: 'pilot-dropdown' %></td>
              <td><%= f.text_field "penalties[#{driver.id}][#{i}][penalty_reason]", value: driver.penalty_reason %></td>
              <td><%= f.number_field "penalties[#{driver.id}][#{i}][penalty_value]", value: driver.penalty_value %></td>
              <td><%= f.number_field "penalties[#{driver.id}][#{i}][penalty_violation_in_lap]", value: driver.penalty_violation_in_lap %></td>
              <td><%= f.number_field "penalties[#{driver.id}][#{i}][penalty_cleared_in_lap]", value: driver.penalty_cleared_in_lap %></td>
              <td><%= f.number_field "penalties[#{driver.id}][#{i}][penalty_points]", value: penalty_point, class: 'form-control' %></td>
              <td>
                <button type="button" class="add-penalty-btn btn btn-success" data-driver-id="<%= driver.id %>" data-substitutes="<%= substitute_options.map { |opt| ["#{opt[0]}", opt[1]] }.to_json %>">+</button>
                <button type="button" class="remove-penalty-btn btn btn-danger" data-driver-id="<%= driver.id %>">-</button>
              </td>
            </tr>
          <% end %>
        <% end %>
      <% end %>
    </tbody>
  </table>

  <%= f.submit "Aplicar Penalidades" %>
<% end %>

<!-- Template escondido para nova linha de penalidade -->
<template id="penalty-template">
  <tr class="penalty-fields">
    <td class="driver-name"></td>
    <td class="race-number"></td>
    <td>
      <select class="pilot-dropdown">
        <!-- Será preenchido dinamicamente pelo JavaScript -->
      </select>
    </td>
    <td><input type="text" name="penalties[][penalty_reason]" value=""></td>
    <td><input type="number" name="penalties[][penalty_value]" value=""></td>
    <td><input type="number" name="penalties[][penalty_violation_in_lap]" value=""></td>
    <td><input type="number" name="penalties[][penalty_cleared_in_lap]" value=""></td>
    <td>
      <input type="number" name="penalties[][penalty_points]" value="" class="penalty-points-input">
    </td>
    <td>
      <button type="button" class="remove-penalty-btn btn btn-danger">-</button>
    </td>
  </tr>
</template>



<!-- JavaScript para adicionar/remover penalidades -->
<script>
document.addEventListener('turbo:load', () => {
  const penaltyIndexes = {}; // Manter o índice de penalidades para cada piloto

  // Adiciona uma nova linha de penalidade ao clicar no botão '+'
  document.addEventListener('click', function(event) {
    if (event.target.classList.contains('add-penalty-btn')) {
      const driverRow = event.target.closest('tr');

      if (!driverRow) {
        console.error("Elemento 'driverRow' não encontrado");
        return; // Evita erro se o elemento não estiver presente
      }

      const driverId = event.target.dataset.driverId;
      const driverName = driverRow.querySelector('td:first-child')?.textContent;
      const raceNumber = driverRow.querySelector('td:nth-child(2)')?.textContent;

      if (!driverName || !raceNumber) {
        console.error("Nome do piloto ou número da corrida não encontrado");
        return; // Evita erro se não encontrar o nome ou número
      }

      const template = document.querySelector('#penalty-template').content.cloneNode(true);

      // Inicializa o índice de penalidades para o piloto, se necessário
      if (!penaltyIndexes[driverId]) {
        penaltyIndexes[driverId] = 0;
      }

      penaltyIndexes[driverId]++; // Incrementa o índice de penalidades para o piloto atual

      // Atualiza os ids do piloto no template clonado e garante que cada campo tenha um índice único
      template.querySelectorAll('input').forEach(input => {
        input.name = input.name.replace('[]', `[${driverId}][${penaltyIndexes[driverId]}]`);
      });

      // Insere o nome do piloto e o número do carro dinamicamente
      template.querySelector('.driver-name').textContent = driverName;
      template.querySelector('.race-number').textContent = raceNumber;

      const select = template.querySelector('.pilot-dropdown');
      if (select) {
        const substituteOptions = JSON.parse(event.target.dataset.substitutes);
        substituteOptions.forEach(option => {
          const optionElement = document.createElement('option');
          optionElement.value = option[1];
          optionElement.textContent = option[0];
          select.appendChild(optionElement);
        });
      }

      driverRow.insertAdjacentElement('afterend', template.firstElementChild);
    }
  });

  // Remove uma linha de penalidade ao clicar no botão '-'
  document.addEventListener('click', function(event) {
    if (event.target.classList.contains('remove-penalty-btn')) {
      const row = event.target.closest('tr');
      const driverId = event.target.dataset.driverId;
      const allRows = document.querySelectorAll(`#penalty-fields-${driverId}`);

      if (allRows.length > 1) {
        // Adicionar um campo oculto para informar que a penalidade foi removida
        const penaltyId = row.querySelector('input[name*="penalty_points"]')?.name;
        if (penaltyId) {
          const input = document.createElement('input');
          input.type = 'hidden';
          input.name = `${penaltyId.replace('penalty_points', '_destroy')}`;
          input.value = '1';
          row.appendChild(input);
        }

        row.style.display = 'none'; // Esconde a linha, mas deixa no DOM para envio ao backend
      } else {
        alert('O piloto precisa ter pelo menos uma linha de penalidade visível.');
      }
    }
  });
});

</script>




<style>
  td, tr {
    color: white;
  }
</style>
