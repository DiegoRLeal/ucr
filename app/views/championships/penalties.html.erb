<h1>Aplicar Penalidades - Corrida <%= @championship.track_name %> - <%= @championship.session_date %> <%= @championship.session_time %></h1>

<%= form_with url: apply_penalties_championship_path(@championship), method: :patch, data: { turbo: false } do |f| %>

  <%= hidden_field_tag :track_name, @championship.track_name %>
  <%= hidden_field_tag :session_date, @championship.session_date %>
  <%= hidden_field_tag :session_time, @championship.session_time %>

  <table>
    <thead>
      <tr>
        <th>Piloto</th>
        <th>Número do Carro</th>
        <th>Substituto</th> <!-- Nova coluna para o dropdown -->
        <th>Motivo da Penalidade</th>
        <th>Valor (segundos)</th>
        <th>Volta da Violação</th>
        <th>Volta da Limpeza</th>
        <th>Pontos de Penalidade</th>
        <th>Ações</th>
      </tr>
    </thead>
    <tbody>
      <% @drivers.each do |driver| %>
        <% # Gerar as opções de substituto para o piloto atual %>
        <% substitute_options = @drivers.reject { |d| d.id == driver.id }.sort_by { |d| d.driver_first_name }.map { |d| "<option value='#{d.id}'>#{d.driver_first_name} #{d.driver_last_name}</option>" }.join.html_safe %>

        <!-- Primeira linha do piloto -->
        <tr class="penalty-fields" id="penalty-fields-<%= driver.id %>">
          <td><%= driver.driver_first_name %> <%= driver.driver_last_name %></td>
          <td><%= driver.race_number %></td>

          <!-- Dropdown de Substituto -->
          <td>
            <%= f.select "penalties[#{driver.id}][0][driver_id]", options_for_select(@drivers.reject { |d| d.id == driver.id }.sort_by { |d| d.driver_first_name }.map { |d| ["#{d.driver_first_name} #{d.driver_last_name}", d.id] }), class: 'pilot-dropdown' %>
          </td>

          <td><%= f.text_field "penalties[#{driver.id}][penalty_reason][]", value: "" %></td>
          <td><%= f.number_field "penalties[#{driver.id}][penalty_value][]", value: "" %></td>
          <td><%= f.number_field "penalties[#{driver.id}][penalty_violation_in_lap][]", value: "" %></td>
          <td><%= f.number_field "penalties[#{driver.id}][penalty_cleared_in_lap][]", value: "" %></td>
          <td><%= f.number_field "penalties[#{driver.id}][penalty_points][]", value: "" %></td>
          <td>
            <button type="button" class="remove-penalty-btn btn btn-danger" data-driver-id="<%= driver.id %>">-</button>
          </td>
        </tr>

        <!-- Botão para Adicionar Nova Penalidade -->
        <tr>
          <td colspan="8"></td> <!-- Coluna ajustada para cobrir todas as colunas -->
          <td>
            <button type="button" class="add-penalty-btn btn btn-success" data-driver-id="<%= driver.id %>" data-substitutes="<%= substitute_options %>">+</button>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>

  <%= f.submit "Aplicar Penalidades" %>
<% end %>

<!-- Template escondido para nova linha de penalidade -->
<template id="penalty-template">
  <tr class="penalty-fields">
    <td class="driver-name"></td>
    <td class="race-number"></td>

    <!-- Dropdown de Substituto no Template -->
    <td>
      <select class="pilot-dropdown">
        <!-- Será preenchido dinamicamente pelo JavaScript -->
      </select>
    </td>

    <td><input type="text" name="penalties[][penalty_reason][]" value=""></td>
    <td><input type="number" name="penalties[][penalty_value][]" value=""></td>
    <td><input type="number" name="penalties[][penalty_violation_in_lap][]" value=""></td>
    <td><input type="number" name="penalties[][penalty_cleared_in_lap][]" value=""></td>
    <td><input type="number" name="penalties[][penalty_points][]" value=""></td>
    <td>
      <button type="button" class="remove-penalty-btn btn btn-danger">-</button>
    </td>
  </tr>
</template>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', () => {
  // Adiciona uma nova linha de penalidade ao clicar no botão '+'
  document.querySelectorAll('.add-penalty-btn').forEach(button => {
    button.addEventListener('click', function() {
      const driverId = this.dataset.driverId;
      const driverName = this.closest('tr').previousElementSibling.querySelector('td:first-child').textContent;
      const raceNumber = this.closest('tr').previousElementSibling.querySelector('td:nth-child(2)').textContent;
      const template = document.querySelector('#penalty-template').content.cloneNode(true);

      // Atualiza os ids do piloto no template clonado
      template.querySelectorAll('input').forEach(input => {
        input.name = input.name.replace('[]', `[${driverId}]`);
      });

      // Insere o nome do piloto e o número do carro dinamicamente
      template.querySelector('.driver-name').textContent = driverName;
      template.querySelector('.race-number').textContent = raceNumber;

      // Preenche o dropdown de substituto com as opções do dataset
      const select = template.querySelector('.pilot-dropdown');
      select.innerHTML = this.dataset.substitutes;

      // Insere a nova linha logo antes da linha do botão de adicionar
      this.closest('tr').insertAdjacentElement('beforebegin', template.firstElementChild);
    });
  });

  // Remove uma linha de penalidade ao clicar no botão '-'
  document.addEventListener('click', function(event) {
    if (event.target.classList.contains('remove-penalty-btn')) {
      const row = event.target.closest('tr');
      const driverId = event.target.dataset.driverId;

      // Verifica se essa linha é a primeira linha de penalidade do piloto
      const penaltyRows = document.querySelectorAll(`#penalty-fields-${driverId}`);

      // Se houver mais de uma linha de penalidade, permite remover; caso contrário, bloqueia
      if (row !== penaltyRows[0]) {
        row.remove();
      } else {
        alert('A primeira linha de penalidade de um piloto não pode ser removida.');
      }
    }
  });
});
</script>
