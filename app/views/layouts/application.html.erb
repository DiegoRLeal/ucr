<!DOCTYPE html>
<html>
  <head>
    <title>Under Control Racing</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests" />

    <!-- Manifest JSON & icons -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="manifest" href="<%= asset_path 'manifest.json' %>">
    <%= render 'shared/pwa_icons' %>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>

    <%= javascript_importmap_tags %>
  </head>

  <body>
    <%= yield %>

    <!-- Modal simples de instalação -->
    <div id="install-prompt" class="modal hidden">
      <div class="modal-content">
        <p>Instale o app para uma melhor experiência.</p>
        <div class="btn-group">
          <button id="accept-install" class="install-btn">Instalar</button>
          <button id="deny-install" class="cancel-btn">Não, obrigado</button>
        </div>
      </div>
    </div>

    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #EDEDED;
        margin: 0;
        padding: 0;
        justify-content: center;
        align-items: center;
      }

      /* Estilos do Modal */
      .modal {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s ease;
      }

      .modal.active {
        opacity: 1;
        visibility: visible;
      }

      .modal-content {
        background-color: white;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        text-align: center;
        position: relative;
        max-width: 350px;
        width: 100%;
      }

      .modal-content p {
        font-size: 16px;
        margin-bottom: 15px;
      }

      /* Botões alinhados lado a lado */
      .btn-group {
        display: flex;
        justify-content: space-between;
      }

      .install-btn, .cancel-btn {
        padding: 8px 15px;
        margin: 5px;
        border: none;
        border-radius: 5px;
        font-size: 15px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        width: 48%; /* Largura ajustada para caberem lado a lado */
      }

      .install-btn {
        background-color: hsl(140.54deg 51.4% 51.6%);
        color: hsla(0,0%,13%,0.9);
      }

      .install-btn:hover {
        background-color: #36e572;
      }


      .cancel-btn {
        background-color: #ccc;
        color: #333;
      }

      .cancel-btn:hover {
        background-color: #bbb;
      }

      /* Responsivo */
      @media (max-width: 600px) {
        .modal-content {
          width: 90%;
        }
      }
    </style>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const installPrompt = document.getElementById('install-prompt');

        // Verificar se é iOS
        const isIos = /iphone|ipad|ipod/.test(navigator.userAgent.toLowerCase());
        const isInStandaloneMode = ('standalone' in window.navigator) && (window.navigator.standalone);

        if (isIos && !isInStandaloneMode) {
          // Exibir instruções para adicionar à tela de início no iOS
          installPrompt.classList.add('active');
          installPrompt.innerHTML = `
            <div class="modal-content">
              <p>Para instalar o app, toque no ícone de compartilhamento <i class="fa-solid fa-arrow-up-from-bracket"></i> e selecione "Adicionar à Tela de Início".</p>
              <button id="deny-install" class="cancel-btn">Fechar</button>
            </div>
          `;

          const denyButton = document.getElementById('deny-install');
          denyButton.addEventListener('click', () => {
            installPrompt.classList.remove('active');
          });
        } else {
          // Manter o comportamento normal para Android
          window.addEventListener('beforeinstallprompt', (event) => {
            event.preventDefault();
            deferredPrompt = event;
            installPrompt.classList.add('active');

            const acceptButton = document.getElementById('accept-install');
            acceptButton.addEventListener('click', () => {
              installPrompt.classList.remove('active');
              deferredPrompt.prompt();

              deferredPrompt.userChoice.then((choiceResult) => {
                if (choiceResult.outcome === 'accepted') {
                  console.log('Usuário aceitou a instalação da PWA');
                } else {
                  console.log('Usuário rejeitou a instalação da PWA');
                }
                deferredPrompt = null;
              });
            });

            const denyButton = document.getElementById('deny-install');
            denyButton.addEventListener('click', () => {
              installPrompt.classList.remove('active');
            });
          });
        }
      });

    </script>

    <script>
      let deferredPrompt;

      document.addEventListener('DOMContentLoaded', () => {
        const installPrompt = document.getElementById('install-prompt');

        window.addEventListener('beforeinstallprompt', (event) => {
          event.preventDefault();
          deferredPrompt = event;
          installPrompt.classList.add('active');

          const acceptButton = document.getElementById('accept-install');
          acceptButton.addEventListener('click', () => {
            installPrompt.classList.remove('active');
            deferredPrompt.prompt();

            deferredPrompt.userChoice.then((choiceResult) => {
              if (choiceResult.outcome === 'accepted') {
                console.log('Usuário aceitou a instalação da PWA');
              } else {
                console.log('Usuário rejeitou a instalação da PWA');
              }
              deferredPrompt = null;
            });
          });

          const denyButton = document.getElementById('deny-install');
          denyButton.addEventListener('click', () => {
            installPrompt.classList.remove('active');
          });
        });
      });
    </script>

    <%= render 'shared/plus' %>
  </body>
</html>
